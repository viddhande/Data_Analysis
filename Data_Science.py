{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "62a4733e-45a3-4ce3-98e2-34c6c5e7197d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy\n",
    "import pandas as pd\n",
    "import sklearn\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "67c5cb8d-477e-48d9-afa7-358bebe1285e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('train.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b9956849-86bf-4280-a6e9-643fdaf12843",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>887</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Montvila, Rev. Juozas</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>211536</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>888</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Graham, Miss. Margaret Edith</td>\n",
       "      <td>female</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>112053</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>B42</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>889</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>W./C. 6607</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>890</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Behr, Mr. Karl Howell</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>111369</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>C148</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>891</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Dooley, Mr. Patrick</td>\n",
       "      <td>male</td>\n",
       "      <td>32.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>370376</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass  \\\n",
       "0              1         0       3   \n",
       "1              2         1       1   \n",
       "2              3         1       3   \n",
       "3              4         1       1   \n",
       "4              5         0       3   \n",
       "..           ...       ...     ...   \n",
       "886          887         0       2   \n",
       "887          888         1       1   \n",
       "888          889         0       3   \n",
       "889          890         1       1   \n",
       "890          891         0       3   \n",
       "\n",
       "                                                  Name     Sex   Age  SibSp  \\\n",
       "0                              Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                               Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                             Allen, Mr. William Henry    male  35.0      0   \n",
       "..                                                 ...     ...   ...    ...   \n",
       "886                              Montvila, Rev. Juozas    male  27.0      0   \n",
       "887                       Graham, Miss. Margaret Edith  female  19.0      0   \n",
       "888           Johnston, Miss. Catherine Helen \"Carrie\"  female   NaN      1   \n",
       "889                              Behr, Mr. Karl Howell    male  26.0      0   \n",
       "890                                Dooley, Mr. Patrick    male  32.0      0   \n",
       "\n",
       "     Parch            Ticket     Fare Cabin Embarked  \n",
       "0        0         A/5 21171   7.2500   NaN        S  \n",
       "1        0          PC 17599  71.2833   C85        C  \n",
       "2        0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3        0            113803  53.1000  C123        S  \n",
       "4        0            373450   8.0500   NaN        S  \n",
       "..     ...               ...      ...   ...      ...  \n",
       "886      0            211536  13.0000   NaN        S  \n",
       "887      0            112053  30.0000   B42        S  \n",
       "888      2        W./C. 6607  23.4500   NaN        S  \n",
       "889      0            111369  30.0000  C148        C  \n",
       "890      0            370376   7.7500   NaN        Q  \n",
       "\n",
       "[891 rows x 12 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "567b205a-54ca-4b24-aae7-4557fa5b6630",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(891, 12)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "63e321f5-07b2-494a-b5b5-a0848d2bb3d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10692"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "51ba89fa-90b4-4bc2-97d8-6f2adbed9e0d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>714.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.383838</td>\n",
       "      <td>2.308642</td>\n",
       "      <td>29.699118</td>\n",
       "      <td>0.523008</td>\n",
       "      <td>0.381594</td>\n",
       "      <td>32.204208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>257.353842</td>\n",
       "      <td>0.486592</td>\n",
       "      <td>0.836071</td>\n",
       "      <td>14.526497</td>\n",
       "      <td>1.102743</td>\n",
       "      <td>0.806057</td>\n",
       "      <td>49.693429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.420000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>223.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>20.125000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.910400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.454200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>668.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>512.329200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
       "count   891.000000  891.000000  891.000000  714.000000  891.000000   \n",
       "mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n",
       "std     257.353842    0.486592    0.836071   14.526497    1.102743   \n",
       "min       1.000000    0.000000    1.000000    0.420000    0.000000   \n",
       "25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n",
       "50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n",
       "75%     668.500000    1.000000    3.000000   38.000000    1.000000   \n",
       "max     891.000000    1.000000    3.000000   80.000000    8.000000   \n",
       "\n",
       "            Parch        Fare  \n",
       "count  891.000000  891.000000  \n",
       "mean     0.381594   32.204208  \n",
       "std      0.806057   49.693429  \n",
       "min      0.000000    0.000000  \n",
       "25%      0.000000    7.910400  \n",
       "50%      0.000000   14.454200  \n",
       "75%      0.000000   31.000000  \n",
       "max      6.000000  512.329200  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "602355f8-c1a8-43c1-bfe8-4c3e6885d672",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 891 entries, 0 to 890\n",
      "Data columns (total 12 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   PassengerId  891 non-null    int64  \n",
      " 1   Survived     891 non-null    int64  \n",
      " 2   Pclass       891 non-null    int64  \n",
      " 3   Name         891 non-null    object \n",
      " 4   Sex          891 non-null    object \n",
      " 5   Age          714 non-null    float64\n",
      " 6   SibSp        891 non-null    int64  \n",
      " 7   Parch        891 non-null    int64  \n",
      " 8   Ticket       891 non-null    object \n",
      " 9   Fare         891 non-null    float64\n",
      " 10  Cabin        204 non-null    object \n",
      " 11  Embarked     889 non-null    object \n",
      "dtypes: float64(2), int64(5), object(5)\n",
      "memory usage: 83.7+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "44bda20d-7a72-4d44-bb8a-bdafcc4f88b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>750</th>\n",
       "      <td>751</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Wells, Miss. Joan</td>\n",
       "      <td>female</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>29103</td>\n",
       "      <td>23.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass               Name     Sex  Age  SibSp  \\\n",
       "750          751         1       2  Wells, Miss. Joan  female  4.0      1   \n",
       "\n",
       "     Parch Ticket  Fare Cabin Embarked  \n",
       "750      1  29103  23.0   NaN        S  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "faba139f-2f8f-430b-8d48-4c1fc1418f02",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['PassengerId', 'Survived', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp',\n",
       "       'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "28aeb51f-c865-43c1-ab42-54cd80046caf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        male\n",
       "1      female\n",
       "2      female\n",
       "3      female\n",
       "4        male\n",
       "        ...  \n",
       "886      male\n",
       "887    female\n",
       "888    female\n",
       "889      male\n",
       "890      male\n",
       "Name: Sex, Length: 891, dtype: object"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Sex']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "f9b874ae-0e75-42e5-9575-b41006a9c341",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0                                Braund, Mr. Owen Harris\n",
       "1      Cumings, Mrs. John Bradley (Florence Briggs Th...\n",
       "2                                 Heikkinen, Miss. Laina\n",
       "3           Futrelle, Mrs. Jacques Heath (Lily May Peel)\n",
       "4                               Allen, Mr. William Henry\n",
       "                             ...                        \n",
       "886                                Montvila, Rev. Juozas\n",
       "887                         Graham, Miss. Margaret Edith\n",
       "888             Johnston, Miss. Catherine Helen \"Carrie\"\n",
       "889                                Behr, Mr. Karl Howell\n",
       "890                                  Dooley, Mr. Patrick\n",
       "Name: Name, Length: 891, dtype: object"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Name']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2f4e8ecc-001e-4748-801d-308f5c3b5291",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>887</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Montvila, Rev. Juozas</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>211536</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>888</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Graham, Miss. Margaret Edith</td>\n",
       "      <td>female</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>112053</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>B42</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>889</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>W./C. 6607</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>890</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Behr, Mr. Karl Howell</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>111369</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>C148</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>891</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Dooley, Mr. Patrick</td>\n",
       "      <td>male</td>\n",
       "      <td>32.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>370376</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass  \\\n",
       "0              1         0       3   \n",
       "1              2         1       1   \n",
       "2              3         1       3   \n",
       "3              4         1       1   \n",
       "4              5         0       3   \n",
       "..           ...       ...     ...   \n",
       "886          887         0       2   \n",
       "887          888         1       1   \n",
       "888          889         0       3   \n",
       "889          890         1       1   \n",
       "890          891         0       3   \n",
       "\n",
       "                                                  Name     Sex   Age  SibSp  \\\n",
       "0                              Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                               Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                             Allen, Mr. William Henry    male  35.0      0   \n",
       "..                                                 ...     ...   ...    ...   \n",
       "886                              Montvila, Rev. Juozas    male  27.0      0   \n",
       "887                       Graham, Miss. Margaret Edith  female  19.0      0   \n",
       "888           Johnston, Miss. Catherine Helen \"Carrie\"  female   NaN      1   \n",
       "889                              Behr, Mr. Karl Howell    male  26.0      0   \n",
       "890                                Dooley, Mr. Patrick    male  32.0      0   \n",
       "\n",
       "     Parch            Ticket     Fare Cabin Embarked  \n",
       "0        0         A/5 21171   7.2500   NaN        S  \n",
       "1        0          PC 17599  71.2833   C85        C  \n",
       "2        0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3        0            113803  53.1000  C123        S  \n",
       "4        0            373450   8.0500   NaN        S  \n",
       "..     ...               ...      ...   ...      ...  \n",
       "886      0            211536  13.0000   NaN        S  \n",
       "887      0            112053  30.0000   B42        S  \n",
       "888      2        W./C. 6607  23.4500   NaN        S  \n",
       "889      0            111369  30.0000  C148        C  \n",
       "890      0            370376   7.7500   NaN        Q  \n",
       "\n",
       "[891 rows x 12 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b469c0e7-6f53-42c7-bd9a-83675c52b49f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "233ccf3e-a3ee-453a-ba5e-a16e4b34eaa3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Survived</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sex</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>female</th>\n",
       "      <td>81</td>\n",
       "      <td>233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>male</th>\n",
       "      <td>468</td>\n",
       "      <td>109</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Survived    0    1\n",
       "Sex               \n",
       "female     81  233\n",
       "male      468  109"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(df[\"Sex\"], df[\"Survived\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "463263c7-dd8a-4b42-8680-3a3f1eb59791",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Survived</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pclass</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>80</td>\n",
       "      <td>136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>97</td>\n",
       "      <td>87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>372</td>\n",
       "      <td>119</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Survived    0    1\n",
       "Pclass            \n",
       "1          80  136\n",
       "2          97   87\n",
       "3         372  119"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(df[\"Pclass\"], df[\"Survived\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "11f5fd25-d62e-4023-b1dc-2d862d001294",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Sex</th>\n",
       "      <th>female</th>\n",
       "      <th>male</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pclass</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>94</td>\n",
       "      <td>122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>76</td>\n",
       "      <td>108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>144</td>\n",
       "      <td>347</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Sex     female  male\n",
       "Pclass              \n",
       "1           94   122\n",
       "2           76   108\n",
       "3          144   347"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(df[\"Pclass\"], df[\"Sex\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "ab2a49dd-4ae4-470e-b762-651d7e3d6ece",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Sex</th>\n",
       "      <th>female</th>\n",
       "      <th>male</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0.42</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.67</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.75</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.83</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.92</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70.00</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70.50</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71.00</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74.00</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80.00</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>88 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Sex    female  male\n",
       "Age                \n",
       "0.42        0     1\n",
       "0.67        0     1\n",
       "0.75        2     0\n",
       "0.83        0     2\n",
       "0.92        0     1\n",
       "...       ...   ...\n",
       "70.00       0     2\n",
       "70.50       0     1\n",
       "71.00       0     2\n",
       "74.00       0     1\n",
       "80.00       0     1\n",
       "\n",
       "[88 rows x 2 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(df[\"Age\"], df[\"Sex\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "72b019d0-3dc3-438f-9a5c-5a32521cafc4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = sns.countplot(x=\"Sex\", hue=\"Survived\", palette=\"Set1\", data = df)\n",
    "ax.set(title = \"Survivors according to Sex\", xlabel = \"Sex\", ylabel = \"Total\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "2697be0f-f199-4db6-bb72-539d6b1866fb",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\axisgrid.py:123: UserWarning: The figure layout has changed to tight\n",
      "  self._figure.tight_layout(*args, **kwargs)\n"
     ]
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 413x350 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.catplot(x=\"Pclass\", y=\"Survived\", hue=\"Sex\", data=df,aspect=0.9, height=3.5)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "07b3f246-b46f-43d1-930f-778145e0294d",
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "module 'seaborn' has no attribute 'FacterPlot'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[22], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43msns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mFacterPlot\u001b[49m(x\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mEmbarked\u001b[39m\u001b[38;5;124m\"\u001b[39m, y\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mSurvived\u001b[39m\u001b[38;5;124m\"\u001b[39m , hue\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mSex\u001b[39m\u001b[38;5;124m\"\u001b[39m, data\u001b[38;5;241m=\u001b[39mdf, aspect\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0.5\u001b[39m, size\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m3.5\u001b[39m)\n\u001b[0;32m      2\u001b[0m plt\u001b[38;5;241m.\u001b[39mshow()\n",
      "\u001b[1;31mAttributeError\u001b[0m: module 'seaborn' has no attribute 'FacterPlot'"
     ]
    }
   ],
   "source": [
    "sns.FacterPlot(x=\"Embarked\", y=\"Survived\" , hue=\"Sex\", data=df, aspect=0.5, size=3.5)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1db16ff2-7d51-4a97-9bdf-cf18534c4109",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dd182c56-3a6d-4584-9842-b0e5e7c71507",
   "metadata": {},
   "outputs": [],
   "source": [
    "graph = sns.FacetGrid(df, col=\"Survived\")\n",
    "graph.map(plt.hist, \"Fare\", bins=20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "f71bce10-b61d-4b10-b0f6-7922cf6e85be",
   "metadata": {},
   "outputs": [],
   "source": [
    " df.loc[df[\"Fare\"]>400, \"Fare\"] = df[\"Fare\"].median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "6def19a1-114f-4cd7-b25e-ffe2d621a83b",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\asus\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\seaborn\\axisgrid.py:123: UserWarning: The figure layout has changed to tight\n",
      "  self._figure.tight_layout(*args, **kwargs)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x2d1b4d1f690>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x300 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    " graph_age = sns.FacetGrid(df, col=\"Survived\")\n",
    "graph_age.map(plt.hist, \"Age\", bins= 20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "0d7e430d-be3f-4dff-93ac-69c3567373bb",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.loc[df[\"Age\"]>70, \"Age\"] = 70"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "3287a0be-d681-4494-b99a-1f3d72669a95",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PassengerId : 0\n",
      "Survived : 0\n",
      "Pclass : 0\n",
      "Name : 0\n",
      "Sex : 0\n",
      "Age : 177\n",
      "SibSp : 0\n",
      "Parch : 0\n",
      "Ticket : 0\n",
      "Fare : 0\n",
      "Cabin : 687\n",
      "Embarked : 2\n"
     ]
    }
   ],
   "source": [
    "for column in df:\n",
    "    print(column, \":\",df[column].isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "be5fc60f-2972-40b2-9026-16adbf395007",
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"Age\"].fillna(df[\"Age\"].median(),inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "d2b4e34a-6a75-4716-b32f-a64eecc9f9a7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PassengerId : 0\n",
      "Survived : 0\n",
      "Pclass : 0\n",
      "Name : 0\n",
      "Sex : 0\n",
      "Age : 0\n",
      "SibSp : 0\n",
      "Parch : 0\n",
      "Ticket : 0\n",
      "Fare : 0\n",
      "Cabin : 687\n",
      "Embarked : 2\n"
     ]
    }
   ],
   "source": [
    "for column in df:\n",
    "    print(column, \":\",df[column].isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "7727e865-9b4d-484a-9e48-891352204baf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Embarked\n",
      "S    644\n",
      "C    168\n",
      "Q     77\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(df[\"Embarked\"].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "964543b3-9ef7-4b28-8cd1-5776c04389ba",
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"Embarked\"].fillna(\"S\",inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "8f61d1ea-5466-4cda-9388-003e78a3901a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PassengerId : 0\n",
      "Survived : 0\n",
      "Pclass : 0\n",
      "Name : 0\n",
      "Sex : 0\n",
      "Age : 0\n",
      "SibSp : 0\n",
      "Parch : 0\n",
      "Ticket : 0\n",
      "Fare : 0\n",
      "Cabin : 687\n",
      "Embarked : 0\n"
     ]
    }
   ],
   "source": [
    "for column in df:\n",
    "    print(column, \":\",df[column].isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "8d70bbd7-8d76-4a3e-9213-624068b6c616",
   "metadata": {},
   "outputs": [],
   "source": [
    "del df[\"Cabin\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "b1632571-8a2e-41c1-a42b-a336281c3db6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PassengerId : 0\n",
      "Survived : 0\n",
      "Pclass : 0\n",
      "Name : 0\n",
      "Sex : 0\n",
      "Age : 0\n",
      "SibSp : 0\n",
      "Parch : 0\n",
      "Ticket : 0\n",
      "Fare : 0\n",
      "Embarked : 0\n"
     ]
    }
   ],
   "source": [
    "for column in df:\n",
    "    print(column, \":\",df[column].isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "b47f2b47-58d3-423a-a748-50f495697143",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_title(Name):\n",
    "    if '.' in Name:\n",
    "        return Name.split(',')[1].split('.')[0].strip()\n",
    "    else:\n",
    "        return \"No title in name\"\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "7e16a42b-b08f-422d-8cd1-13f82451cb20",
   "metadata": {},
   "outputs": [],
   "source": [
    "titles = set([x for x in df.Name.map(lambda x: get_title(x))])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "47891d4f-fc8a-4a34-8278-6d9bf93686f7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'Sir', 'Dr', 'Jonkheer', 'Mme', 'Lady', 'Rev', 'Ms', 'Mr', 'Major', 'Capt', 'the Countess', 'Don', 'Miss', 'Master', 'Mrs', 'Col', 'Mlle'}\n"
     ]
    }
   ],
   "source": [
    "print(titles)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "e36ce917-43dd-47c9-8932-a680c1734632",
   "metadata": {},
   "outputs": [],
   "source": [
    "def shorter_titles(x):\n",
    "    titles = x[\"Title\"]\n",
    "    if titles in ['Capt', 'Col', 'Major']:\n",
    "        return 'Officer'\n",
    "    elif titles in ['Jonkheer', 'Don', 'the Countess','Dona','Lady','Sir']:\n",
    "        return 'Royalty'\n",
    "    elif titles=='Mme':\n",
    "        return 'Mrs'\n",
    "    elif titles in ['Mlle' , 'Ms']:\n",
    "        return 'Miss'\n",
    "    else:\n",
    "        return titles"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "3f843683-1dfd-45b5-a8ef-5002aeb8fc8a",
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"Title\"] = df['Name'].map(lambda x: get_title(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "b8004330-e61f-4779-b247-610c2373be35",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Title\n",
      "Mr         517\n",
      "Miss       185\n",
      "Mrs        126\n",
      "Master      40\n",
      "Dr           7\n",
      "Rev          6\n",
      "Royalty      5\n",
      "Officer      5\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "df[\"Title\"] = df.apply(shorter_titles, axis=1)\n",
    "print(df.Title.value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "d793f6bb-2073-4407-8696-d9e78148b8b5",
   "metadata": {},
   "outputs": [],
   "source": [
    "del df['Name']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "dbd07a5b-fba5-40b0-b833-750ac0483155",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>Title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>38</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>A./5. 2152</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>302</th>\n",
       "      <td>303</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>LINE</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>S</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>female</td>\n",
       "      <td>55.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>248706</td>\n",
       "      <td>16.0000</td>\n",
       "      <td>S</td>\n",
       "      <td>Mrs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>797</th>\n",
       "      <td>798</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>female</td>\n",
       "      <td>31.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>349244</td>\n",
       "      <td>8.6833</td>\n",
       "      <td>S</td>\n",
       "      <td>Mrs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>645</th>\n",
       "      <td>646</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>48.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17572</td>\n",
       "      <td>76.7292</td>\n",
       "      <td>C</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>701</th>\n",
       "      <td>702</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17475</td>\n",
       "      <td>26.2875</td>\n",
       "      <td>S</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>825</th>\n",
       "      <td>826</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>368323</td>\n",
       "      <td>6.9500</td>\n",
       "      <td>Q</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>398</th>\n",
       "      <td>399</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>male</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>244278</td>\n",
       "      <td>10.5000</td>\n",
       "      <td>S</td>\n",
       "      <td>Dr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>796</th>\n",
       "      <td>797</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>49.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>17465</td>\n",
       "      <td>25.9292</td>\n",
       "      <td>S</td>\n",
       "      <td>Dr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>730</th>\n",
       "      <td>731</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>29.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24160</td>\n",
       "      <td>211.3375</td>\n",
       "      <td>S</td>\n",
       "      <td>Miss</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>805</th>\n",
       "      <td>806</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>31.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>347063</td>\n",
       "      <td>7.7750</td>\n",
       "      <td>S</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>113</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>324669</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>103</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>35281</td>\n",
       "      <td>77.2875</td>\n",
       "      <td>S</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>813</th>\n",
       "      <td>814</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>female</td>\n",
       "      <td>6.0</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>347082</td>\n",
       "      <td>31.2750</td>\n",
       "      <td>S</td>\n",
       "      <td>Miss</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17604</td>\n",
       "      <td>82.1708</td>\n",
       "      <td>C</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>610</th>\n",
       "      <td>611</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>female</td>\n",
       "      <td>39.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>347082</td>\n",
       "      <td>31.2750</td>\n",
       "      <td>S</td>\n",
       "      <td>Mrs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>104</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>33.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7540</td>\n",
       "      <td>8.6542</td>\n",
       "      <td>S</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>457</th>\n",
       "      <td>458</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>17464</td>\n",
       "      <td>51.8625</td>\n",
       "      <td>S</td>\n",
       "      <td>Mrs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>698</th>\n",
       "      <td>699</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>49.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>17421</td>\n",
       "      <td>110.8833</td>\n",
       "      <td>C</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>186</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>113767</td>\n",
       "      <td>50.0000</td>\n",
       "      <td>S</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass     Sex   Age  SibSp  Parch      Ticket  \\\n",
       "37            38         0       3    male  21.0      0      0  A./5. 2152   \n",
       "302          303         0       3    male  19.0      0      0        LINE   \n",
       "15            16         1       2  female  55.0      0      0      248706   \n",
       "797          798         1       3  female  31.0      0      0      349244   \n",
       "645          646         1       1    male  48.0      1      0    PC 17572   \n",
       "701          702         1       1    male  35.0      0      0    PC 17475   \n",
       "825          826         0       3    male  28.0      0      0      368323   \n",
       "398          399         0       2    male  23.0      0      0      244278   \n",
       "796          797         1       1  female  49.0      0      0       17465   \n",
       "730          731         1       1  female  29.0      0      0       24160   \n",
       "805          806         0       3    male  31.0      0      0      347063   \n",
       "112          113         0       3    male  22.0      0      0      324669   \n",
       "102          103         0       1    male  21.0      0      1       35281   \n",
       "813          814         0       3  female   6.0      4      2      347082   \n",
       "34            35         0       1    male  28.0      1      0    PC 17604   \n",
       "610          611         0       3  female  39.0      1      5      347082   \n",
       "103          104         0       3    male  33.0      0      0        7540   \n",
       "457          458         1       1  female  28.0      1      0       17464   \n",
       "698          699         0       1    male  49.0      1      1       17421   \n",
       "185          186         0       1    male  28.0      0      0      113767   \n",
       "\n",
       "         Fare Embarked Title  \n",
       "37     8.0500        S    Mr  \n",
       "302    0.0000        S    Mr  \n",
       "15    16.0000        S   Mrs  \n",
       "797    8.6833        S   Mrs  \n",
       "645   76.7292        C    Mr  \n",
       "701   26.2875        S    Mr  \n",
       "825    6.9500        Q    Mr  \n",
       "398   10.5000        S    Dr  \n",
       "796   25.9292        S    Dr  \n",
       "730  211.3375        S  Miss  \n",
       "805    7.7750        S    Mr  \n",
       "112    8.0500        S    Mr  \n",
       "102   77.2875        S    Mr  \n",
       "813   31.2750        S  Miss  \n",
       "34    82.1708        C    Mr  \n",
       "610   31.2750        S   Mrs  \n",
       "103    8.6542        S    Mr  \n",
       "457   51.8625        S   Mrs  \n",
       "698  110.8833        C    Mr  \n",
       "185   50.0000        S    Mr  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "179719c2-67a6-4933-8e78-8c47fb139615",
   "metadata": {},
   "outputs": [],
   "source": [
    "del df['Ticket']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "0bd90919-b0db-41ed-a840-7dde54e27ac0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>Title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>S</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C</td>\n",
       "      <td>Mrs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>S</td>\n",
       "      <td>Miss</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>S</td>\n",
       "      <td>Mrs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>887</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>S</td>\n",
       "      <td>Rev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>888</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>S</td>\n",
       "      <td>Miss</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>889</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>female</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>S</td>\n",
       "      <td>Miss</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>890</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>C</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>891</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>32.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>Q</td>\n",
       "      <td>Mr</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows Ã— 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass     Sex   Age  SibSp  Parch     Fare  \\\n",
       "0              1         0       3    male  22.0      1      0   7.2500   \n",
       "1              2         1       1  female  38.0      1      0  71.2833   \n",
       "2              3         1       3  female  26.0      0      0   7.9250   \n",
       "3              4         1       1  female  35.0      1      0  53.1000   \n",
       "4              5         0       3    male  35.0      0      0   8.0500   \n",
       "..           ...       ...     ...     ...   ...    ...    ...      ...   \n",
       "886          887         0       2    male  27.0      0      0  13.0000   \n",
       "887          888         1       1  female  19.0      0      0  30.0000   \n",
       "888          889         0       3  female  28.0      1      2  23.4500   \n",
       "889          890         1       1    male  26.0      0      0  30.0000   \n",
       "890          891         0       3    male  32.0      0      0   7.7500   \n",
       "\n",
       "    Embarked Title  \n",
       "0          S    Mr  \n",
       "1          C   Mrs  \n",
       "2          S  Miss  \n",
       "3          S   Mrs  \n",
       "4          S    Mr  \n",
       "..       ...   ...  \n",
       "886        S   Rev  \n",
       "887        S  Miss  \n",
       "888        S  Miss  \n",
       "889        C    Mr  \n",
       "890        Q    Mr  \n",
       "\n",
       "[891 rows x 10 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "a1e8cdfd-87ca-4d65-9458-10eb8ff52a40",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.Sex.replace(('male','female'), (0,1), inplace=True)\n",
    "df.Embarked.replace(('S','C','Q'), (0,1,2), inplace=True)\n",
    "df.Title.replace(('Mr','Miss','Mrs','Master','Dr','Rev','Royalty','Officer'), (0,1,2,3,4,5,6,7), inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "052cb8e3-1905-4d10-9e05-50b3a0840883",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>Title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>887</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>888</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>889</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>890</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>891</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows Ã— 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass  Sex   Age  SibSp  Parch     Fare  \\\n",
       "0              1         0       3    0  22.0      1      0   7.2500   \n",
       "1              2         1       1    1  38.0      1      0  71.2833   \n",
       "2              3         1       3    1  26.0      0      0   7.9250   \n",
       "3              4         1       1    1  35.0      1      0  53.1000   \n",
       "4              5         0       3    0  35.0      0      0   8.0500   \n",
       "..           ...       ...     ...  ...   ...    ...    ...      ...   \n",
       "886          887         0       2    0  27.0      0      0  13.0000   \n",
       "887          888         1       1    1  19.0      0      0  30.0000   \n",
       "888          889         0       3    1  28.0      1      2  23.4500   \n",
       "889          890         1       1    0  26.0      0      0  30.0000   \n",
       "890          891         0       3    0  32.0      0      0   7.7500   \n",
       "\n",
       "     Embarked  Title  \n",
       "0           0      0  \n",
       "1           1      2  \n",
       "2           0      1  \n",
       "3           0      2  \n",
       "4           0      0  \n",
       "..        ...    ...  \n",
       "886         0      5  \n",
       "887         0      1  \n",
       "888         0      1  \n",
       "889         1      0  \n",
       "890         2      0  \n",
       "\n",
       "[891 rows x 10 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "bdf8b478-c924-48f6-9971-0dc2fbc4559f",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "x = df.drop(['Survived','PassengerId'], axis=1)\n",
    "y = df['Survived']\n",
    "x_train, x_val, y_train, y_val = train_test_split(x,y,test_size = 0.1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "676b6b5b-d08b-48b1-ac74-1d0544116c0a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import accuracy_score\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "a7262989-1430-4fad-943a-03318323c5cb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 87.78\n"
     ]
    }
   ],
   "source": [
    "randomforest = RandomForestClassifier()\n",
    "randomforest.fit(x_train,y_train)\n",
    "y_pred = randomforest.predict(x_val)\n",
    "acc_randomforest = round(accuracy_score(y_pred,y_val)*100 , 2)\n",
    "print(\"Accuracy: {}\".format(acc_randomforest))\n",
    "pickle.dump(randomforest, open('titanic_model.sav', 'wb'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "938d9aa2-2598-44fe-897a-de757a62ed45",
   "metadata": {},
   "outputs": [],
   "source": [
    "import joblib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "3c53529f-4638-4b7b-8039-6ee2448d0ccd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Data_Science_model.joblib']"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "joblib.dump(randomforest, 'Data_Science_model.joblib')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0bb9ad61-bda8-4339-8043-88ac66b96db5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "07e607f6-068b-4372-8990-5da396a5f05a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e8022ee2-f4a4-407b-b5f1-5fdc70f329dc",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
